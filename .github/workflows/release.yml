name: Release

on:
  release:
    types: [created]

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Extract branch name from tag reference
        id: extract_branch
        run: |
          if [[ $GITHUB_REF =~ refs/tags/release\.([0-9]+)\.([0-9]+)\.([0-9]+) ]]; then
            X=${BASH_REMATCH[1]}
            Y=${BASH_REMATCH[2]}
            Z=${BASH_REMATCH[3]}
            BRANCH_NAME="release/$X.$Y.$Z"
          else
            TAG_NAME=${GITHUB_REF#refs/tags/}
            BRANCH_NAME=$(git branch -r --contains tags/$TAG_NAME | grep -v 'HEAD' | head -n 1 | sed 's/origin\///' | xargs)
            if [ -z "$BRANCH_NAME" ]; then
              echo "Branch not found for tag $TAG_NAME"
              exit 1
            fi
          fi
          echo "::set-output name=branch::$BRANCH_NAME"

      - name: Set up Git identity
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.extract_branch.outputs.branch }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build --if-present

        # this step should be executed only on branch release/x
      - name: Enter pre-release version
        if: startsWith(github.ref, 'refs/heads/release') || (startsWith(github.ref, 'refs/tags') && contains(github.ref, '-rc.'))
        run: npm run rc:on

      - name: Show github.ref value
        run: echo "The value of github.ref is ${{ github.ref }}"

        # this step should be executed only on branch main
      - name: Exit pre-release version
        if: startsWith(github.ref, 'refs/heads/main/') || (startsWith(github.ref, 'refs/tags') && !contains(github.ref, '-rc.'))
        run: npm run rc:off

      - name: Create release version
        run: npm run version
        # This expects you to have a script called release which does a build for your packages and calls changeset publish

      - name: Setup .npmrc
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

      - name: Git status
        run: git status

      - name: Stage files
        run: git add --all
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git status
        run: git status

      - name: Commit version
        run: git commit -m "Release version"
        env:
          HUSKY: 0
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git status
        run: git status

      # - name: Git Push
      #   run: git push origin HEAD:${{ github.ref }}

      # This expects you to have a script called release which does a build for your packages and calls changeset publish

      - name: Publish
        run: npm run release
        # This expects you to have a script called release which does a build for your packages and calls changeset publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: Create Release Pull Request or Publish to npm
      #   id: changesets
      #   uses: changesets/action@v1
      #   with:
      #     # This expects you to have a script called release which does a build for your packages and calls changeset publish
      #     publish: npm run release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
